vector<int> boundaryTraversal(vector<vector<int> > matrix, int n, int m) 
    {
        // code here
       
    int row_start = 0;
    int row_end = n - 1;
    int col_start = 0;
    int col_end = m - 1;
    vector<int>v;

    while (row_start <= row_end && col_start <= col_end) {
        // Traverse top row
        for (int i = col_start; i <= col_end; ++i) {
            v.push_back(matrix[row_start][i]);
        }
        ++row_start;

        // Traverse rightmost column
        for (int i = row_start; i <= row_end; ++i) {
            v.push_back(matrix[i][col_end]);
        }
        --col_end;

        // Check if there are more rows and columns to traverse
        if (row_start <= row_end && col_start <= col_end) {
            // Traverse bottom row
            for (int i = col_end; i >= col_start; --i) {
                v.push_back(matrix[row_end][i]);
            }
            --row_end;

            // Traverse leftmost column
            for (int i = row_end; i >= row_start; --i) {
                v.push_back(matrix[i][col_start]);
            }
            ++col_start;
            break;
        }
    }

    return v;
